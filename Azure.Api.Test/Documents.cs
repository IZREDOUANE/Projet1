using AutoMapper;
using Azure.Api.Controllers;
using Azure.Api.Data;
using Azure.Api.Data.DTOs;
using Azure.Api.Data.Mapper;
using Azure.Api.Data.Models;
using Azure.Api.Repository;
using Azure.Api.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Newtonsoft.Json.Linq;
using NUnit.Framework;
using System.IO;
using System;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace Azure.Api.Test
{
    public class Documents
    {
        private readonly string _content = "";

        private IDocumentService _documentService;
        private IJwtTokenValidatorService _jwtvService;
        private IMapper _mapper;
        private IDocumentStoreRepository<Document> _documentRepo;
        private DocumentStoreRepository<DocumentVersion> _documentVersionRepo;
        private IDocumentStoreRepository<DocumentType> _documentTypeRepo;
        private IDocumentStoreRepository<RepriseDocument> _repriseDocRepo;
        private DocumentStoreRepository<DocumentAccess> _documentAccess;
        private DocumentStoreContext _dbContext;

        private IConfiguration _config;

        private DocumentController _docControl;

        [SetUp]
        public void Setup()
        {
            Environment.SetEnvironmentVariable("AZURE_STORAGE_CONNECTION_STRING", "DefaultEndpointsProtocol=https;AccountName=bsazureapirec;AccountKey=U/38Fsisnwi2rJ9ptwlxW/2mOw2tbCyHVBqez1IVjqVkXThpUOBWjN7AEw2NHn8oVyGKrB56oEzg88c3T1WWTA==;EndpointSuffix=core.windows.net");

            // config setup
            var configBuilder = new ConfigurationBuilder()
                    .SetBasePath(Directory.GetCurrentDirectory())
                    .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
                    .AddEnvironmentVariables();

            _config = configBuilder.Build();


            // mapper setup
            var mapperConfig = new MapperConfiguration(mc =>
            {
                mc.AddProfile(new DocumentProfile());
                mc.AddProfile(new DocumentTypeProfile());
                mc.AddProfile(new UserProfile());
            });

            _mapper = mapperConfig.CreateMapper();

            // dbcontext setup
            DbContextOptionsBuilder<DocumentStoreContext> options = new DbContextOptionsBuilder<DocumentStoreContext>();
            options.UseNpgsql(_config.GetConnectionString("DocumentStoreConnectionString"));

            _dbContext = new DocumentStoreContext(options.Options);

            // repositories

            _documentRepo = new DocumentStoreRepository<Document>(_dbContext);
            _documentVersionRepo = new DocumentStoreRepository<DocumentVersion>(_dbContext);
            _documentTypeRepo = new DocumentStoreRepository<DocumentType>(_dbContext);
            _repriseDocRepo = new DocumentStoreRepository<RepriseDocument>(_dbContext);
            _documentAccess = new DocumentStoreRepository<DocumentAccess>(_dbContext);

            // document service

            _documentService = new DocumentService(_config, _documentRepo, _documentVersionRepo, _documentTypeRepo, _documentAccess, _repriseDocRepo, _mapper);
            _jwtvService = new JwtTokenValidatorService(_config);

            // document controller

            _docControl = new DocumentController(_documentService, _jwtvService);
        }

        #region Upload

        [Test]
        public void Upload_With_New_Doc_And_One_User()
        {
            var AuthorizedUsersSfId = new string[] { "0011j00000qvNPlAAM" };
            var Details = new DocumentDTO
            {
                FileName = "Test",
                FileExtension = "pdf",
                FileSize = 3450,
                ModifiedBy = "Giroud",
                FileCategory = "Test"
            };

            var payload = new JObject();
            payload.Add("AuthorizedUsersSfId", JToken.FromObject(AuthorizedUsersSfId));
            payload.Add("Details", JToken.FromObject(Details));
            payload.Add("Content", JToken.FromObject(_content));

            var task = _docControl.Create(payload);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(200, results.StatusCode);
        }

        [Test]
        public void Upload_With_SfId()
        {
            var AuthorizedUsersSfId = new string[] { "0011j00000qvNPlAAM" };
            var Details = new DocumentDTO
            {
                FileName = "Test",
                FileExtension = "pdf",
                SfId = "dsqdsqdsqd23EZ",
                FileSize = 3450,
                ModifiedBy = "Giroud",
                FileCategory = "Test"
            };

            var payload = new JObject();
            payload.Add("AuthorizedUsersSfId", JToken.FromObject(AuthorizedUsersSfId));
            payload.Add("Details", JToken.FromObject(Details));
            payload.Add("Content", JToken.FromObject(_content));

            var task = _docControl.Create(payload);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(200, results.StatusCode);
        }

        

        #endregion

        #region Download

        [Test]
        public void Download_With_GUID()
        {
            var GUID = Guid.Parse("f05b731d-2e87-4163-adb5-1990d5299f13");
            var owner = "0011j0000145EXEAA2";

            var task = _docControl.Download(GUID, owner);
            task.Wait();

            var results = task.Result as FileContentResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.FileContents);
        }

        [Test]
        public void Download_Non_Existant_Guid_In_DB()
        {
            var GUID = Guid.NewGuid();
            string owner = null;

            var task = _docControl.Download(GUID, owner);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(403, results.StatusCode);
        }

        [Test]
        public void Download_SfId_Not_Owner()
        {
            var GUID = Guid.Parse("f05b731d-2e87-4163-adb5-1990d5299f13");
            string owner = "0011j0000145EXEAA3";

            var task = _docControl.Download(GUID, owner);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(403, results.StatusCode);
        }

        [Test]
        public void Download_No_Owner()
        {
            var GUID = Guid.Parse("f05b731d-2e87-4163-adb5-1990d5299f13");
            string owner = null;

            var task = _docControl.Download(GUID, owner);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(403, results.StatusCode);
        }

        #endregion

        #region Delete

        [Test]
        public void Delete_With_GUID()
        {
            var ownerSfId = "0011j00000qvNPlAAM";
            var guid = Guid.Parse("1a681e77-0f9d-4011-aa9a-896a9f773497");

            var task =_docControl.Delete("", ownerSfId, guid);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(200, results.StatusCode);
        }

        [Test]
        public void Delete_With_SfId()
        {
            var ownerSfId = "0011j00000qvNPlAAM";
            var docSfId = "dsqdsqdsqd23EZ";

            var task = _docControl.Delete(ownerSfId, docSfId: docSfId);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(200, results.StatusCode);
        }

        [Test]
        public void Delete_Without_Owner_SfId()
        {
            var docSfId = "dsqdsqdsqd23EZ";

            var task = _docControl.Delete(null, docSfId: docSfId);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(403, results.StatusCode);
        }

        [Test]
        public void Delete_Without_SfId_Nor_GUID()
        {
            var ownerSfId = "0011j00000qvNPlAAM";

            var task = _docControl.Delete(ownerSfId);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.AreEqual(400, results.StatusCode);
        }

        #endregion

        #region List documents

        [Test]
        public void List_With_GUID_And_Default_Values() // By default: all types and only active
        {
            var guid = "70688783-c13f-4d4d-96c7-3620f3b60187";
            
            var task = _docControl.ListDocumentsById(guid);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_GUID_Only_History()
        {
            var guid = "e84d23f6-d88f-471e-9c0a-75a07e35a0e4";

            var task = _docControl.ListDocumentsById(guid, docState: DocumentState.HISTORY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_GUID_History_And_Current_Versions()
        {
            var guid = "e84d23f6-d88f-471e-9c0a-75a07e35a0e4";

            var task = _docControl.ListDocumentsById(guid, docState: DocumentState.ANY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_GUID_Existing_Type()
        {
            var guid = "e84d23f6-d88f-471e-9c0a-75a07e35a0e4";
            var type = "Test";

            var task = _docControl.ListDocumentsById(guid, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_GUID_Incorrect_Type()
        {
            var guid = "e84d23f6-d88f-471e-9c0a-75a07e35a0e4";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(guid, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.AreEqual(expected: (results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Incorrect_GUID()
        {
            var guid = "e84d23f6-d88f-471e-9c0a-75a07e35a0e5";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(guid, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.AreEqual(expected: (results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Owner_And_Default_Values() // By default: all types and only active
        {
            var owner = "0011j00000qvNPlAAM";

            var task = _docControl.ListDocumentsById(owner);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Owner_Only_History()
        {
            var owner = "0011j00000qvNPlAAM";

            var task = _docControl.ListDocumentsById(owner, docState: DocumentState.HISTORY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Owner_History_And_Current_Versions()
        {
            var owner = "0011j00000qvNPlAAM";

            var task = _docControl.ListDocumentsById(owner, docState: DocumentState.ANY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Owner_Existing_Type()
        {
            var owner = "0011j00000qvNPlAAM";
            var type = "Test";

            var task = _docControl.ListDocumentsById(owner, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Owner_Incorrect_Type()
        {
            var owner = "0011j00000qvNPlAAM";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(owner, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.AreEqual((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_Incorrect_Owner()
        {
            var owner = "0011j00000qvNPlAAT";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(owner, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);

            var expected = (results.Value as List<DocumentDTO>).Count;
            Assert.AreEqual(expected, 0);
        }

        [Test]
        public void List_With_DocumentSfId_And_Default_Values() // By default: all types and only active
        {
            var docSfId = "dsqdsqdsqd23EZ";

            var task = _docControl.ListDocumentsById(docSfId);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_DocumentSfId_Only_History()
        {
            var docSfId = "dsqdsqdsqd23EZ";

            var task = _docControl.ListDocumentsById(docSfId, docState: DocumentState.HISTORY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_DocumentSfId_History_And_Current_Versions()
        {
            var docSfId = "dsqdsqdsqd23EZ";

            var task = _docControl.ListDocumentsById(docSfId, docState: DocumentState.ANY);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_DocumentSfId_Existing_Type()
        {
            var docSfId = "dsqdsqdsqd23EZ";
            var type = "Test";

            var task = _docControl.ListDocumentsById(docSfId, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        [Test]
        public void List_With_DocumentSfId_Incorrect_Type()
        {
            var docSfId = "dsqdsqdsqd23EZ";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(docSfId, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.AreEqual(expected: (results.Value as List<DocumentDTO>).Count, actual: 0);
        }

        [Test]
        public void List_With_Incorrect_DocumentSfId()
        {
            var docSfId = "dsqdsqdsqd23EZ";
            var type = "Test2";

            var task = _docControl.ListDocumentsById(docSfId, type);
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.AreEqual((results.Value as List<DocumentDTO>).Count, 0);
        }

        #endregion

        #region Document types

        public void List_Document_Types()
        {
            var task = _docControl.ListAllDocumentTypes();
            task.Wait();

            var results = task.Result as ObjectResult;

            Assert.IsNotNull(results);
            Assert.IsNotNull(results.Value);
            Assert.AreEqual(200, results.StatusCode);
            Assert.Greater((results.Value as List<DocumentDTO>).Count, 0);
        }

        #endregion
    }
}